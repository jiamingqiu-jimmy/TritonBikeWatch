@page "/dashboard"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@using BlazorWASM.Shared
@inject HttpClient Http
@inject IDialogService DialogService

<MudText Typo="Typo.h2"> Dashboard </MudText>
<br>
<MudPaper Class="pt-4">
    <MudText Class="pl-4" Typo="Typo.subtitle1"> Current Location: @currentLocation</MudText>
    <br />
    <MudTable Items="@Locations" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Users</MudTh>
            <MudTh>Devices</MudTh>
            <MudTh>Alerts</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.LocationName</MudTd>
            <MudTd DataLabel="Description">@context.LocationDescription</MudTd>
            <MudTd DataLabel="Users">@context.Users</MudTd>
            <MudTd DataLabel="Devices">@context.Devices</MudTd>
            <MudTd DataLabel="Alerts">@context.Alerts</MudTd>
            <MudTd>
                    <MudButton @onclick="() => SelectLocation(context)" Variant="Variant.Filled" Color="Color.Primary" Disabled="@selectedLocations.ContainsKey(context.Id)">Select</MudButton>
            </MudTd>
        </RowTemplate>
    </MudTable>
    <br />
    <br />
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" sm="7">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h5"> Send an Alert to Users at: @currentLocation </MudText>
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField T="string" Label="Alert Description!" />
                    <br />
                    <div class="d-flex align-center justify-space-between">
                         <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Error" Disabled="@(currentLocation == "Not Selected")" Class="ml-auto">Alert!</MudButton>
                    </div>
                </MudForm>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    private List<Location> Locations = new List<Location>();
    private Dictionary<string, bool> selectedLocations = new Dictionary<string, bool>();
    private bool _loading = true;
    private string currentLocation = "Not Selected";
    
    bool success;
    string[] errors = { };
    MudForm form;

    protected override async Task OnInitializedAsync()
    {
        Locations = await Http.GetFromJsonAsync<List<Location>>("GetLocations");
        _loading = false;
    }

    private void SelectLocation(Location location)
    {
        currentLocation = location.LocationName;
        selectedLocations = new Dictionary<string, bool>();
        selectedLocations[location.Id] = true;
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<Alert>("Alert Dialog", options);
    }
}
