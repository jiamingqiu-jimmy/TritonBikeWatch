@page "/adminPanel"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@using BlazorWASM.Shared;
@using System.Security.Claims;
@using System;
@using System.Collections.Generic;
@using System.Text.Json;
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Admin Panel</PageTitle>
<MudText Typo="Typo.h2"> Admin Panel </MudText>
<MudText Typo="Typo.subtitle1"> For all your admin needs! </MudText>

<MudPaper>

    <MudTable Items="@Locations" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Users</MudTh>
            <MudTh>Devices</MudTh>
            <MudTh>Alerts</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.LocationName</MudTd>
            <MudTd DataLabel="Description">@context.LocationDescription</MudTd>
            <MudTd DataLabel="Users">@context.Users</MudTd>
            <MudTd DataLabel="Devices">@context.Devices</MudTd>
            <MudTd DataLabel="Alerts">@context.Alerts</MudTd>
        </RowTemplate>
    </MudTable>
    <br />
    <br />
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" sm="7">
            <MudPaper Class="pa-4">
            <MudText Typo="Typo.h5"> Add a new location </MudText>
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField @bind-Value="@newLocation.LocationName" T="string" Label="Location Name" Required="true" RequiredError="Location name is required!" />
                    <MudTextField @bind-Value="@newLocation.LocationDescription" T="string" Label="Location Description"/>
                    <br />
                    <div class="d-flex align-center justify-space-between">
                        <MudButton OnClick="(() => AddLocation())" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                    </div>
                </MudForm>
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudPaper>

    @code {
    private List<Location> Locations = new List<Location>();
    private bool _loading = true;

    Location newLocation = new Location();
    bool success;
    string[] errors = { };
    MudForm form;

    protected override async Task OnInitializedAsync()
    {
        Locations = await Http.GetFromJsonAsync<List<Location>>("GetLocations");
        _loading = false;
    }

    private async Task AddLocation()
    {
        await form.Validate();
        if (form.IsValid)
        {
            var result = await Http.PostAsJsonAsync<Location>("GetLocations", newLocation);
            Locations.Add(newLocation);
            newLocation = new Location();
            StateHasChanged();
        }
    }
}